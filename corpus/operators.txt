===
Simple binary operator 1
===

$a -eq $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))

===
Simple binary operator 2
===

$a -ne $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))

===
Simple binary operator 3
===

$a -ge $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 4
===

$a -gt $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 5
===

$a -lt $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 6
===

$a -le $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 7
===

$a -like $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 8
===

$a -notlike $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 9
===

$a -match $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 10
===

$a -notmatch $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 11
===

$a -replace $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 12
===

$a -contains $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 13
===

$a -notcontains $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 14
===

$a -in $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 15
===

$a -notin $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 16
===

$a -split $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 17
===

$a -join $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 18
===

$a -is $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 19
===

$a -isnot $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Simple binary operator 20
===

$a -as $a

---

(program
  (pipeline_statement
    (composed_expression
      (variable_expression)
      (operator)
      (variable_expression))))


===
Integer operation
===

4 + 4 - 8

---

(program
  (pipeline_statement
    (composed_expression
      (composed_expression
        (number_expr)
        (operator)
        (number_expr))
      (operator)
      (number_expr))))

===
Integer operation with negative
===

4 + 4 - -8

---

(program
  (pipeline_statement
    (composed_expression
      (composed_expression
        (number_expr)
        (operator)
        (number_expr))
      (operator)
      (unary_expression
        (number_expr)))))
